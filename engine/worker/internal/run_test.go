package internal

import (
	"encoding/json"
	"testing"

	"github.com/ovh/cds/sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

var (
	actionBefore          = `{"id":13,"name":"New Job","type":"Joined","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":[{"id":21,"action_id":0,"name":"os-architecture","type":"os-architecture","value":"darwin/amd64"}],"parameters":null,"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"{{.cds.application}}\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]},{"id":14,"group_id":1,"name":"test_action","type":"Default","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":50,"name":"var1","type":"string","value":"test1"},{"id":51,"name":"var2","type":"string","value":"test2"}],"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"{{.var1 | upper}}\"\necho \"{{.var2}}\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]}],"group":{"id":1,"name":"shared.infra"}},{"id":14,"group_id":1,"name":"test_action","type":"Default","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":50,"name":"var1","type":"string","value":"var1"},{"id":51,"name":"var2","type":"string","value":"var2"}],"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"{{.var1 | upper}}\"\necho \"{{.var2}}\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]}],"group":{"id":1,"name":"shared.infra"}},{"id":14,"group_id":1,"name":"test_action","type":"Default","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":50,"name":"var1","type":"string","value":"{{.cds.app.var1}}"},{"id":51,"name":"var2","type":"string","value":"{{.cds.app.var2}}"}],"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"{{.var1 | upper}}\"\necho \"{{.var2}}\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]}],"group":{"id":1,"name":"shared.infra"}}]}`
	expectedAction        = `{"id":13,"name":"New Job","type":"Joined","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":[{"id":21,"action_id":0,"name":"os-architecture","type":"os-architecture","value":"darwin/amd64"}],"parameters":null,"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"test\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]},{"id":14,"group_id":1,"name":"test_action","type":"Default","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":50,"name":"var1","type":"string","value":"test1"},{"id":51,"name":"var2","type":"string","value":"test2"}],"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"TEST1\"\necho \"test2\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]}],"group":{"id":1,"name":"shared.infra"}},{"id":14,"group_id":1,"name":"test_action","type":"Default","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":50,"name":"var1","type":"string","value":"var1"},{"id":51,"name":"var2","type":"string","value":"var2"}],"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"VAR1\"\necho \"var2\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]}],"group":{"id":1,"name":"shared.infra"}},{"id":14,"group_id":1,"name":"test_action","type":"Default","description":"","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":50,"name":"var1","type":"string","value":"app1"},{"id":51,"name":"var2","type":"string","value":"app2"}],"actions":[{"id":11,"name":"Script","type":"Builtin","description":"This action executes a given script with a given interpreter.","enabled":true,"deprecated":false,"optional":false,"always_executed":false,"requirements":null,"parameters":[{"id":202,"name":"script","type":"text","value":"echo \"APP1\"\necho \"app2\"","description":"Content of your script.\nYou can put #!/bin/bash, or #!/bin/perl at first line.\nMake sure that the binary used is in\nthe pre-requisites of action."}]}],"group":{"id":1,"name":"shared.infra"}}]}`
	jobParametersBefore   = `[{"id":0,"name":"cds.manual","type":"string","value":"true"},{"id":0,"name":"cds.node","type":"string","value":"test"},{"id":0,"name":"payload","type":"string","value":"{}"},{"id":0,"name":"cds.status","type":"string","value":"Success"},{"id":0,"name":"cds.triggered_by.email","type":"string","value":"francois.samin@corp.ovh.com"},{"id":0,"name":"cds.triggered_by.fullname","type":"string","value":""},{"id":0,"name":"cds.triggered_by.username","type":"string","value":"francois.samin"},{"id":0,"name":"cds.manual","type":"string","value":"true"},{"id":0,"name":"cds.project","type":"string","value":"FSAMI"},{"id":0,"name":"cds.app.var1","type":"string","value":"app1"},{"id":0,"name":"cds.run","type":"string","value":"3.0"},{"id":0,"name":"cds.run.number","type":"string","value":"3"},{"id":0,"name":"cds.version","type":"string","value":"3"},{"id":0,"name":"cds.run.subnumber","type":"string","value":"0"},{"id":0,"name":"cds.app.var2","type":"string","value":"app2"},{"id":0,"name":"cds.workflow","type":"string","value":"test"},{"id":0,"name":"cds.pipeline","type":"string","value":"test"},{"id":0,"name":"cds.application","type":"string","value":"test"},{"id":0,"name":"git.repository","type":"string","value":""},{"id":0,"name":"git.branch","type":"string","value":""},{"id":0,"name":"git.tag","type":"string","value":""},{"id":0,"name":"git.hash","type":"string","value":""},{"id":0,"name":"git.hash.short","type":"string","value":""},{"id":0,"name":"git.author","type":"string","value":""},{"id":0,"name":"git.message","type":"string","value":""},{"id":0,"name":"git.url","type":"string","value":""},{"id":0,"name":"git.http_url","type":"string","value":""},{"id":0,"name":"git.server","type":"string","value":""},{"id":0,"name":"cds.ui.pipeline.run","type":"string","value":"http://localhost:8080/project/FSAMI/workflow/test/run/3/node/3?name=test"},{"id":0,"name":"cds.node.id","type":"string","value":"3"},{"id":0,"name":"cds.stage","type":"string","value":"Stage 1"},{"id":0,"name":"cds.job","type":"string","value":"New Job"},{"id":0,"name":"job.requirement.os-architecture.os-architecture","type":"string","value":"darwin/amd64"},{"id":0,"name":"cds.key.proj-ssh-fsami.pub","type":"string","value":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCgvK9/8TbRlT1rWlXOfCiBNjx6m6Vzav12tzsLFtkmkCMM6syemtT9DtAAzKkZ4AfGYYhlZ1oh9Ez0ova+IJUz+4yKkK0/LAwcY0kYDwOBWQ7QON94Ss6chqNjAIhRxIIIAwbkutOiwfVl2owKaGYQ2GqCEnDGcIb5a3Z4OCaS1pDEgjxkJ57t0Q3zuAuqRlyJhjO4onW4R+EeMxO4xx/SpgB0JSYW7DYyfz1GliPoxmHnaDaV5k9PFgKwUlJVOSlqbyy/MP3YFJ4jgoTSHPQcndALDw9i1EA7hVbTv5MvE0IN7H6zTakoRdJTR1oTBn32Ol9CwtVjtFnDw1EY7OGR4X1dsuBafpRQIZFuXbzLsK0zKasTqk1ylID3OBBre3x9slUuMCiu6SdZwY+ccKQhNEcfIDbZSY560LNBX4b77pGHS/nC7/OZw9/8rQ2Qfh/co2LSAV6d9FvkPJ6IZ2crhvcuJnp+7XjKMn5IT5aKrjQ4JiFU94y3UkAvRq3fEUMEKac8+MCauaAdqCD1Ol7jC8h11SSGv4YbVO16oTQ0aMrQm6jb8cGIqaaa7G7D7m1oyc87hlYMczs8l1rfut1OPMXctTu/S90X7rp2rYkPCSe0ghgGaBA7SDpjteZ+8q3R4Slv9nOvRsSzRa3rCce30TB+VvUuQslOVWCwSSQ9lw==\n proj-ssh-fsami@cds"},{"id":0,"name":"cds.key.proj-ssh-fsami.id","type":"string","value":""},{"id":0,"name":"cds.key.proj-pgp-fsami.pub","type":"string","value":"-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nxsBNBF6NgM4BCACeAJ54KL6QfBY9ZnrGXGqdKiCiBPPAJC6UpuKVycegybwgUoxo\ngcDFCMTl+TFOR7jhlL+sEfm1S19J626tzleEQn2ReM8bqFE9Wy7ISbrEqxzghzT0\nkMRUroubbn1HflAru2u0R+tih5pBexCZDR6ZhbmzTJfhvyUBR4R5mECGAnsVxZEN\nQH56SdGobfncu3IpH3TLhTYlGtbaCBaISpxeHawC4XclvAMsJctjVvYK5Ku+bczR\n6ZLuKl8AWpDGiOMkLMaM8qIYBLIzn2p1ugf3CRknrWBQomHqmwrpkpOpcYVcFf85\n81nruMRdz052iSJZRo05v+YedJ4wkzgc+U/lABEBAAHNLnByb2otcGdwLWZzYW1p\nIChwcm9qLXBncC1mc2FtaSkgPGNkc0Bsb2NhaG9zdD7CwGkEEwEIAB0FAl6NgM4J\nECkyrgFTXD3PAhsDAhkBAwsJAgIVCgAALLwIAIuOpFlxibKKWQ5yOY4hwHi9PW4T\nL0VPueVRWCwYKWPVu4As/WpgFgfw+nIxb/1jfq+p5HKuxGIqrhi+ySycdfBA8Gtc\nyBu+MlONNiDSDiQ1BXUfEv2eR2ICKnel/PZHRtXOGOB2YVg3yB5tV55G4UM7JN6E\ncTq9Zs4o0doKew4exQLZsEV4FjRVyFoqBcbGGSsPO5SXdVjFbjNMq/pIR6OXut19\nvyNarKoiGcWcPJRLK7HrsiQaP5//jWrBFFIDPXHKgv4TxWh/tp1cOmqYnugzUsKP\nORelbowPpM/F3es2NOIQfpVUOuX47LU/qIEIDItxnyvqywQeiqecq9fmfCfOwE0E\nXo2AzgEIAMMGT4Z/Zj8mtPuSoJDfUvqMXJGwGsZD879xtkU04IUA4/LmqXlXHETJ\nQFMhcSNtrRa7mV1X0p5WaiiVubAzmcEbRiIAUDSjAgDpp5tthaHEgKasplST5xPW\n0ONJoB9UDTGpgkYYl54QYWCb8Os0jqIXjOpZCzCXlYH7hpRSfwR8UT/gHM6Dd0AP\n3ABO1phyUIETmtml6zs1bU9X5hrYifr4urzipTJJ58LELy0819+3QnaLIUxyKdSi\nyTS8bX/8Chlk0oNsc0PRoGheoqkvbRxsj0Y/kUhw4+rcT9Ueh71FvSm7Wvg07vvz\nz+ZDQbWI3S6DFQrU5m0NsMGv6kaU6BUAEQEAAcLAXwQYAQgAEwUCXo2AzgkQKTKu\nAVNcPc8CGwwAAFTKCABYISEUbbyZfzsFqx9Scr4+Gg3hhKEj+1EF/LIweEgOkUrQ\nz69KXc5lJdreRTH6/nHshoJSXxdedxNTA2CmbcWkHbxyR6ngyvzMaTIHUIDePS6X\nLKIxsi7+PEciSq9ayeSMyPFEaCSJddyLVWonI3ccRuX/uOAfYeN7djggfCNkHfvR\nFk2SgWZ8um/I8DClJuQJ0lUd/H1yiM40zJoR5qjrS3ChLU1s2GTvEnzWd9W6Bkiv\n0KPK/Aqovc/jkuL5KfByxV1KJwVxL9oZ+BsOAxONPSliYoBZcB2UQ9Ibao5HcWS/\ndzZsfjKo2l05FApZMEI2L8kPI0469OVwWgX9Velz\n=YymC\n-----END PGP PUBLIC KEY BLOCK-----"},{"id":0,"name":"cds.key.proj-pgp-fsami.id","type":"string","value":"535C3DCF"},{"id":0,"name":"cds.workspace","type":"string","value":"/private/tmp/cds/local/978d0899229f8ebc/TmV3IEpvYg/run"},{"id":0,"name":"cds.worker","type":"string","value":"local-vigilant-and-admiring-minsky"}]`
	expectedJobParameters = `[{"id":0,"name":"cds.manual","type":"string","value":"true"},{"id":0,"name":"cds.node","type":"string","value":"test"},{"id":0,"name":"payload","type":"string","value":"{}"},{"id":0,"name":"cds.status","type":"string","value":"Success"},{"id":0,"name":"cds.triggered_by.email","type":"string","value":"francois.samin@corp.ovh.com"},{"id":0,"name":"cds.triggered_by.fullname","type":"string","value":""},{"id":0,"name":"cds.triggered_by.username","type":"string","value":"francois.samin"},{"id":0,"name":"cds.manual","type":"string","value":"true"},{"id":0,"name":"cds.project","type":"string","value":"FSAMI"},{"id":0,"name":"cds.app.var1","type":"string","value":"app1"},{"id":0,"name":"cds.run","type":"string","value":"3.0"},{"id":0,"name":"cds.run.number","type":"string","value":"3"},{"id":0,"name":"cds.version","type":"string","value":"3"},{"id":0,"name":"cds.run.subnumber","type":"string","value":"0"},{"id":0,"name":"cds.app.var2","type":"string","value":"app2"},{"id":0,"name":"cds.workflow","type":"string","value":"test"},{"id":0,"name":"cds.pipeline","type":"string","value":"test"},{"id":0,"name":"cds.application","type":"string","value":"test"},{"id":0,"name":"git.repository","type":"string","value":""},{"id":0,"name":"git.branch","type":"string","value":""},{"id":0,"name":"git.tag","type":"string","value":""},{"id":0,"name":"git.hash","type":"string","value":""},{"id":0,"name":"git.hash.short","type":"string","value":""},{"id":0,"name":"git.author","type":"string","value":""},{"id":0,"name":"git.message","type":"string","value":""},{"id":0,"name":"git.url","type":"string","value":""},{"id":0,"name":"git.http_url","type":"string","value":""},{"id":0,"name":"git.server","type":"string","value":""},{"id":0,"name":"cds.ui.pipeline.run","type":"string","value":"http://localhost:8080/project/FSAMI/workflow/test/run/3/node/3?name=test"},{"id":0,"name":"cds.node.id","type":"string","value":"3"},{"id":0,"name":"cds.stage","type":"string","value":"Stage 1"},{"id":0,"name":"cds.job","type":"string","value":"New Job"},{"id":0,"name":"job.requirement.os-architecture.os-architecture","type":"string","value":"darwin/amd64"},{"id":0,"name":"cds.key.proj-ssh-fsami.pub","type":"string","value":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCgvK9/8TbRlT1rWlXOfCiBNjx6m6Vzav12tzsLFtkmkCMM6syemtT9DtAAzKkZ4AfGYYhlZ1oh9Ez0ova+IJUz+4yKkK0/LAwcY0kYDwOBWQ7QON94Ss6chqNjAIhRxIIIAwbkutOiwfVl2owKaGYQ2GqCEnDGcIb5a3Z4OCaS1pDEgjxkJ57t0Q3zuAuqRlyJhjO4onW4R+EeMxO4xx/SpgB0JSYW7DYyfz1GliPoxmHnaDaV5k9PFgKwUlJVOSlqbyy/MP3YFJ4jgoTSHPQcndALDw9i1EA7hVbTv5MvE0IN7H6zTakoRdJTR1oTBn32Ol9CwtVjtFnDw1EY7OGR4X1dsuBafpRQIZFuXbzLsK0zKasTqk1ylID3OBBre3x9slUuMCiu6SdZwY+ccKQhNEcfIDbZSY560LNBX4b77pGHS/nC7/OZw9/8rQ2Qfh/co2LSAV6d9FvkPJ6IZ2crhvcuJnp+7XjKMn5IT5aKrjQ4JiFU94y3UkAvRq3fEUMEKac8+MCauaAdqCD1Ol7jC8h11SSGv4YbVO16oTQ0aMrQm6jb8cGIqaaa7G7D7m1oyc87hlYMczs8l1rfut1OPMXctTu/S90X7rp2rYkPCSe0ghgGaBA7SDpjteZ+8q3R4Slv9nOvRsSzRa3rCce30TB+VvUuQslOVWCwSSQ9lw==\n proj-ssh-fsami@cds"},{"id":0,"name":"cds.key.proj-ssh-fsami.id","type":"string","value":""},{"id":0,"name":"cds.key.proj-pgp-fsami.pub","type":"string","value":"-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nxsBNBF6NgM4BCACeAJ54KL6QfBY9ZnrGXGqdKiCiBPPAJC6UpuKVycegybwgUoxo\ngcDFCMTl+TFOR7jhlL+sEfm1S19J626tzleEQn2ReM8bqFE9Wy7ISbrEqxzghzT0\nkMRUroubbn1HflAru2u0R+tih5pBexCZDR6ZhbmzTJfhvyUBR4R5mECGAnsVxZEN\nQH56SdGobfncu3IpH3TLhTYlGtbaCBaISpxeHawC4XclvAMsJctjVvYK5Ku+bczR\n6ZLuKl8AWpDGiOMkLMaM8qIYBLIzn2p1ugf3CRknrWBQomHqmwrpkpOpcYVcFf85\n81nruMRdz052iSJZRo05v+YedJ4wkzgc+U/lABEBAAHNLnByb2otcGdwLWZzYW1p\nIChwcm9qLXBncC1mc2FtaSkgPGNkc0Bsb2NhaG9zdD7CwGkEEwEIAB0FAl6NgM4J\nECkyrgFTXD3PAhsDAhkBAwsJAgIVCgAALLwIAIuOpFlxibKKWQ5yOY4hwHi9PW4T\nL0VPueVRWCwYKWPVu4As/WpgFgfw+nIxb/1jfq+p5HKuxGIqrhi+ySycdfBA8Gtc\nyBu+MlONNiDSDiQ1BXUfEv2eR2ICKnel/PZHRtXOGOB2YVg3yB5tV55G4UM7JN6E\ncTq9Zs4o0doKew4exQLZsEV4FjRVyFoqBcbGGSsPO5SXdVjFbjNMq/pIR6OXut19\nvyNarKoiGcWcPJRLK7HrsiQaP5//jWrBFFIDPXHKgv4TxWh/tp1cOmqYnugzUsKP\nORelbowPpM/F3es2NOIQfpVUOuX47LU/qIEIDItxnyvqywQeiqecq9fmfCfOwE0E\nXo2AzgEIAMMGT4Z/Zj8mtPuSoJDfUvqMXJGwGsZD879xtkU04IUA4/LmqXlXHETJ\nQFMhcSNtrRa7mV1X0p5WaiiVubAzmcEbRiIAUDSjAgDpp5tthaHEgKasplST5xPW\n0ONJoB9UDTGpgkYYl54QYWCb8Os0jqIXjOpZCzCXlYH7hpRSfwR8UT/gHM6Dd0AP\n3ABO1phyUIETmtml6zs1bU9X5hrYifr4urzipTJJ58LELy0819+3QnaLIUxyKdSi\nyTS8bX/8Chlk0oNsc0PRoGheoqkvbRxsj0Y/kUhw4+rcT9Ueh71FvSm7Wvg07vvz\nz+ZDQbWI3S6DFQrU5m0NsMGv6kaU6BUAEQEAAcLAXwQYAQgAEwUCXo2AzgkQKTKu\nAVNcPc8CGwwAAFTKCABYISEUbbyZfzsFqx9Scr4+Gg3hhKEj+1EF/LIweEgOkUrQ\nz69KXc5lJdreRTH6/nHshoJSXxdedxNTA2CmbcWkHbxyR6ngyvzMaTIHUIDePS6X\nLKIxsi7+PEciSq9ayeSMyPFEaCSJddyLVWonI3ccRuX/uOAfYeN7djggfCNkHfvR\nFk2SgWZ8um/I8DClJuQJ0lUd/H1yiM40zJoR5qjrS3ChLU1s2GTvEnzWd9W6Bkiv\n0KPK/Aqovc/jkuL5KfByxV1KJwVxL9oZ+BsOAxONPSliYoBZcB2UQ9Ibao5HcWS/\ndzZsfjKo2l05FApZMEI2L8kPI0469OVwWgX9Velz\n=YymC\n-----END PGP PUBLIC KEY BLOCK-----"},{"id":0,"name":"cds.key.proj-pgp-fsami.id","type":"string","value":"535C3DCF"},{"id":0,"name":"cds.workspace","type":"string","value":"/private/tmp/cds/local/978d0899229f8ebc/TmV3IEpvYg/run"},{"id":0,"name":"cds.worker","type":"string","value":"local-vigilant-and-admiring-minsky"}]`
)

func Test_processVariablesAndParameters(t *testing.T) {
	var action sdk.Action
	require.NoError(t, json.Unmarshal([]byte(actionBefore), &action))
	var jobParameters []sdk.Parameter
	require.NoError(t, json.Unmarshal([]byte(jobParametersBefore), &jobParameters))

	require.NoError(t, processVariablesAndParameters(&action, jobParameters, nil))

	actualAction, _ := json.Marshal(action)
	assert.Equal(t, expectedAction, string(actualAction))

	actualJobParameters, _ := json.Marshal(jobParameters)
	assert.Equal(t, expectedJobParameters, string(actualJobParameters))

}
