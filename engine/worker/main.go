package main

import (
	"time"

	"google.golang.org/grpc"

	"github.com/ovh/cds/sdk"
)

var (
	//VERSION is set with -ldflags "-X main.VERSION={{.cds.proj.version}}+{{.cds.version}}"
	VERSION = "snapshot"
	// WorkerID is a unique identifier for this worker
	WorkerID string
	// key is the token generated by the user owning the worker
	key          string
	name         string
	api          string
	model        int64
	hatchery     int64
	hatcheryName string
	basedir      string
	bookedJobID  int64
	logChan      chan sdk.Log
	// port of variable exporter HTTP server
	exportport int
	// current actionBuild is here to allow var export
	pbJob          sdk.PipelineBuildJob
	currentStep    int
	buildVariables []sdk.Variable
	// Git ssh configuration
	pkey          string
	gitsshPath    string
	nbActionsDone int
	status        struct {
		Name      string    `json:"name"`
		Heartbeat time.Time `json:"heartbeat"`
		Status    string    `json:"status"`
		Model     int64     `json:"model"`
	}
	alive       bool
	grpcAddress string
	grpcConn    *grpc.ClientConn
)

func main() {
	sdk.SetAgent(sdk.WorkerAgent)

	cmd := cmdMain()
	cmd.AddCommand(cmdExport)
	cmd.AddCommand(cmdUpload)
	cmd.AddCommand(cmdVersion)
	cmd.AddCommand(cmdRegister())
	cmd.Execute()
}
