name: run_workflow_through_marathon (ITSCWRKFLW17)
version: "2"

testcases:
- name: assert_fixtures
  steps:
  - script: '[ -f ./fixtures/ITSCWRKFLW17/pipeline.yml ]' # check file exists
  - script: '[ -f ./fixtures/ITSCWRKFLW17/workflow.yml ]' # check file exists
  - script: '[ -z "${CDS_MODEL_REQ}" ] && exit 1 || exit 0' # check that the env variable is set
  - script: '[ -z "${CDS_NETWORK_REQ}" ] && exit 1 || exit 0' # check that the env variable is set

- name: prepare_tests
  steps:
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} project remove --force ITSCWRKFLW17"
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} group remove --force ITSCWRKFLW17"
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} project add ITSCWRKFLW17 ITSCWRKFLW17"

- name: import_pipeline
  steps:
  - script: {{.cdsctl}} -f {{.cdsctl.config}} pipeline import --force ITSCWRKFLW17 {{expandEnv ./fixtures/ITSCWRKFLW17/pipeline.yml}}

- name: import_workflow
  steps:
  - script:  {{.cdsctl}} -f {{.cdsctl.config}} workflow import --force ITSCWRKFLW17 ./fixtures/ITSCWRKFLW17/workflow.yml

- name: run_workflow
  steps:
  - script:  {{.cdsctl}} -f {{.cdsctl.config}} workflow run ITSCWRKFLW17 ITSCWRKFLW17-WORKFLOW
    assertions:
    - result.code ShouldEqual 0
    - "result.systemout ShouldContainSubstring Workflow ITSCWRKFLW17-WORKFLOW #1 has been launched"

- name: check_workflow_has_been_started
  steps:
  - script:  {{.cdsctl}} -f {{.cdsctl.config}} workflow status ITSCWRKFLW17 ITSCWRKFLW17-WORKFLOW 1 --format json
    retry: 3
    delay: 30
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.status ShouldEqual Building

- name: check_workflow_is_success
  steps:
  - script: {{.cdsctl}} -f {{.cdsctl.config}} workflow status ITSCWRKFLW17 ITSCWRKFLW17-WORKFLOW 1 --format json
    retry: 10
    delay: 30
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.status ShouldEqual Success

