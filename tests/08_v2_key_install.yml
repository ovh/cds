name: Key install
vars:
  cds_project: "ITV2KEYINSTALL"
  git_repo: "it_v2_key_install"
  cds_workflow: "WorkflowKeyInstall"
testcases:
- name: Prepare test
  steps:
    - name: "Verify cdsctl configuration"
      script: "{{.cdsctl}} -f {{.cdsctl.config}} user me --format json"
      vars:
        cdsUser:
          from: result.systemoutjson.username
    - name: "Display username"
      info: "Connected CDS user is {{.cdsUser}}"
    - type: v2_create_project
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      cds_region: "{{.cds.region}}"

    - type: v2_add_git_repo
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      cds_hook_url: "{{.gitea.hook.url}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      git_repo: "{{.git_repo}}"
    - name: Create variable set item var1
      script: "{{.cdsctl}} -f {{.cdsctl.config}} X project variableset item add {{.cds_project}} varset1 var1 '{\"key\": \"value\"}' string --force"
    - name: Create variable set item secret one line
      script: "{{.cdsctl}} -f {{.cdsctl.config}} X project variableset item add {{.cds_project}} varset1 varSecret myLongSecret secret"
    - name: Create variable set item secret multiline line
      script: "{{.cdsctl}} -f {{.cdsctl.config}} X project variableset item add {{.cds_project}} varset1 myMultilineSecret \"secretMultiline1 \n secretMultiline2\" secret" 

    - type: v2_install_gpg_key
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      gpg_key_id: "{{.gpg.key_id}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      vars:
        emailaddress:
          from: result.emailaddress

- name: Push workflow file
  steps:
    - type: v2_push_cds_files_on_repo
      git_repo: "{{.git_repo}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_email: "{{.Prepare-test.emailaddress}}"
      git_password: "{{.git.password}}"
      gpg_key_id: "{{.gpg.key_id}}"
      files:
        worker-models/debian.yml:
          name: docker-debian
          osarch: linux/amd64
          type: docker
          spec:
            image: buildpack-deps:buster
        workflows/envcontext.yaml:
          name: {{.cds_workflow}}
          on: [push]
          jobs:
            init:
              runs-on: {{.cds_project}}/my_vcs_server/{{.git.user}}/{{.git_repo}}/docker-debian
              steps:
                - uses: actions/keyInstall
                  with:
                    keyName: proj-ssh-itv2keyinstall
                - run: cat $HOME/.ssh/id_rsa-proj-ssh-itv2keyinstall
                  id: displayssh
            pgp:
              runs-on: {{.cds_project}}/my_vcs_server/{{.git.user}}/{{.git_repo}}/docker-debian
              steps:
                - uses: actions/keyInstall
                  with:
                    keyName: proj-pgp-itv2keyinstall   

    - name: Check CDS project analyses status
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis list {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 2
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Skipped"
        - result.systemoutjson.systemoutjson1.status ShouldEqual "Success"
      retry: 20
      delay: 5

    - name: Check that the CDS workflow has at least one execution and is Success
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow history {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} {{.cds_workflow}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 1
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Success"
      retry: 20
      delay: 5
      vars:
        workflowRunID:
          from: result.systemoutjson.systemoutjson0.id

    - name: Download logs
      script: {{.cdsctl}} -f {{.cdsctl.config}} experimental workflow logs download {{.cds_project}} {{.workflowRunID}}

    - name: Checkpgp key
      script: "cat {{.cds_workflow}}-1-1-pgp-step-0 && cat {{.cds_workflow}}-1-1-pgp-step-0 | grep \"pgpkey proj-pgp-itv2keyinstall has been imported\""
    - name: Checkssh key
      script: "cat {{.cds_workflow}}-1-1-init-step-0 && cat {{.cds_workflow}}-1-1-init-step-0 | grep \"sshkey proj-ssh-itv2keyinstall has been created\""
    - name: Checkssh key
      script: "cat {{.cds_workflow}}-1-1-init-displayssh && cat {{.cds_workflow}}-1-1-init-displayssh | grep \"**********\""