name: Workflow Schedule CLI
vars:
  cds_project: "ITV2SCHEDULER"
  git_repo: "it_v2_scheduler"
  cds_workflow: "WorkflowWithScheduler"
testcases:
- name: Prepare test
  steps:
    - name: "Verify cdsctl configuration"
      script: "{{.cdsctl}} -f {{.cdsctl.config}} user me --format json"
      vars:
        cdsUser:
          from: result.systemoutjson.username
    - name: "Display username"
      info: "Connected CDS user is {{.cdsUser}}"
    - type: v2_create_project
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      cds_region: "{{.cds.region}}"

    - type: v2_add_git_repo
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      cds_hook_url: "{{.gitea.hook.url}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      git_repo: "{{.git_repo}}"

    - type: v2_install_gpg_key
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      gpg_key_id: "{{.gpg.key_id}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      vars:
        emailaddress:
          from: result.emailaddress

- name: Push workflow file
  steps:
    - type: v2_push_cds_files_on_repo
      git_repo: "{{.git_repo}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_email: "{{.Prepare-test.emailaddress}}"
      git_password: "{{.git.password}}"
      gpg_key_id: "{{.gpg.key_id}}"
      files:
        worker-models/debian.yml:
          name: docker-debian
          osarch: linux/amd64
          type: docker
          spec:
            image: buildpack-deps:buster
        workflows/WorkflowStepJobCondition.yaml:
          name: {{.cds_workflow}}
          on:
            schedule:
            - cron: 0 0 * * *
          jobs:
            root:
              runs-on: {{.cds_project}}/my_vcs_server/{{.git.user}}/{{.git_repo}}/docker-debian
              steps:
                - run: echo 'done'

    - name: Check CDS project analyses status
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis list {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 2
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Skipped"
        - result.systemoutjson.systemoutjson1.status ShouldEqual "Success"
      retry: 100
      delay: 1

    - name: List all schedulers
      script: {{.cdsctl}} -f {{.cdsctl.config}} admin hooks scheduler list --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson ShouldHaveLength 1
        - result.systemoutjson.systemoutjson0.vcs ShouldEqual "my_vcs_server"
        - result.systemoutjson.systemoutjson0.repository ShouldEqual "{{.git.user}}/{{.git_repo}}"
        - result.systemoutjson.systemoutjson0.workflow ShouldEqual "{{.cds_workflow}}"

    - name: List all schedulers by workflow
      script: {{.cdsctl}} -f {{.cdsctl.config}} admin hooks scheduler list --vcs my_vcs_server --repository {{.git.user}}/{{.git_repo}} --workflow {{.cds_workflow}} --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson ShouldHaveLength 1
        - result.systemoutjson.systemoutjson0.cron ShouldEqual "0 0 * * *"
      vars:
        hookID:
          from: result.systemoutjson.systemoutjson0.id 

    - name: Get a scheduler by ID
      script: {{.cdsctl}} -f {{.cdsctl.config}} admin hooks scheduler get {{.hookID}} --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson.cron ShouldEqual "0 0 * * *"
        - result.systemoutjson.next_execution ShouldNotBeEmpty

    - name: Delete a scheduler by ID
      script: {{.cdsctl}} -f {{.cdsctl.config}} admin hooks scheduler delete --hookID {{.hookID}} --force
      assertions:
        - result.code ShouldEqual 0

    - name: List all schedulers
      script: {{.cdsctl}} -f {{.cdsctl.config}} admin hooks scheduler list --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson ShouldHaveLength 0 

  
