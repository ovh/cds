name: Artifact TestSuite
testcases:
- name: prepare test
  steps:
  - script: {{.cds.build.cds}} project remove --force ITSCARTIFACT
  - script: {{.cds.build.cds}} project add ITSCARTIFACT ITSCARTIFACT ITSCARTIFACT
  - script: {{.cds.build.cds}} application add ITSCARTIFACT TestApp
  - script: {{.cds.build.cds}} environment add ITSCARTIFACT TestEnv

- name: test artifact
  steps:
  - script: {{.cds.build.cds}} pipeline add ITSCARTIFACT ArtifactPip --type deployment
  - script: {{.cds.build.cds}} app pipeline add ITSCARTIFACT TestApp ArtifactPip
  - script: {{.cds.build.cds}} action add IT_SC_cdsartifacttest
  - script: {{.cds.build.cds}} action add step IT_SC_cdsartifacttest Script -p script="echo foo > logs.txt"
  - script: {{.cds.build.cds}} action add step IT_SC_cdsartifacttest "Artifact Upload" -p path=./logs.txt -p tag="{{.cds.version}}"
  - script: {{.cds.build.cds}} pipeline job add ITSCARTIFACT ArtifactPip myJob1
  - script: {{.cds.build.cds}} pipeline job append ITSCARTIFACT ArtifactPip myJob1 IT_SC_cdsartifacttest
  - script: {{.cds.build.cds}} pipeline run ITSCARTIFACT TestApp ArtifactPip TestEnv

- name: listing artifact
  steps:
  - script: {{.cds.build.cds}} artifact list ITSCARTIFACT TestApp ArtifactPip 1 --env TestEnv

- name: downloading artifact
  steps:
  - script: {{.cds.build.cds}} artifact dl ITSCARTIFACT TestApp ArtifactPip 1 --env TestEnv && cat logs.txt | grep foo && rm logs.txt

- name: cleanup
  steps:
  - script: {{.cds.build.cds}} project remove --force ITSCARTIFACT
  - script: {{.cds.build.cds}} action remove IT_SC_cdsartifacttest
  - script: {{.cds.build.cds}} group remove ITSCARTIFACT
