name: signup tests

vars:
  api.url: 'http://localhost:8081'
  ui.url: 'http://localhost:8080'
  cdsctl : 'cdsctl'
  cdsctl.config : './cdsrc'
  smtpmock.url: 'http://localhost:2024'
  username: cds.integration.tests.rw
  ring: 
  email: it-user-rw@localhost.local
  fullname: IT_User_RW
  password: "123456&éçà(§"


testcases:
- name: Check SMTP mock
  steps:  
  - type: http
    method: GET
    url: '{{.smtpmock.url}}'
    retry: 5
    delay: 5
    
- name: create-admin-user
  steps:
  - type: http
    method: POST
    url: '{{.api.url}}/auth/consumer/local/signup'
    assertions:
    - result.statuscode ShouldEqual 201
    headers: 
      "Content-Type": "application/json"
    body: |-
      { "username": "{{.username}}", "fullname": "{{.fullname}}", "email":"{{.email}}", "password": "{{.password}}" }


- name: post-create-user
  steps:
  - type: http
    method: GET
    url: '{{.smtpmock.url}}/messages/{{.email}}/latest'
    assertions:
    - result.statuscode ShouldEqual 200
    retry: 10
    delay: 3
    vars:
      verify: 
        from: result.bodyjson.content-decoded
        regex: cdsctl signup verify --api-url (?:.*) (.*)


- name: prepare-cdsctl-config-file
  steps:
  - script: "rm -f {{.cdsctl.config}}"
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} -c test signup verify {{.post-create-user.verify}} --api-url {{.api.url}} "
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} -c test user me --fields ring --format json"
    assertions:
    - result.systemoutjson.ring ShouldEqual {{.ring}}
