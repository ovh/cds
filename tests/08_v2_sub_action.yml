name: Sub Actions
vars:
  cds_project: "ITV2SUBACTION"
  git_repo: "it_v2_subaction"
  cds_workflow: "WorkflowSubAction"
testcases:
- name: Prepare test
  steps:
    - name: "Verify cdsctl configuration"
      script: "{{.cdsctl}} -f {{.cdsctl.config}} user me --format json"
      vars:
        cdsUser:
          from: result.systemoutjson.username
    - name: "Display username"
      info: "Connected CDS user is {{.cdsUser}}"
    - type: v2_create_project
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      cds_region: "{{.cds.region}}"

    - type: v2_add_git_repo
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      cds_hook_url: "{{.gitea.hook.url}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      git_repo: "{{.git_repo}}"

    - type: v2_install_gpg_key
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      gpg_key_id: "{{.gpg.key_id}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      vars:
        emailaddress:
          from: result.emailaddress

- name: Push workflow file
  steps:
    - type: v2_push_files_on_repo
      git_repo: "{{.git_repo}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_email: "{{.Prepare-test.emailaddress}}"
      git_password: "{{.git.password}}"
      gpg_key_id: "{{.gpg.key_id}}"
      files:
        worker-models/debian.yml:
          name: docker-debian
          osarch: linux/amd64
          type: docker
          spec:
            image: buildpack-deps:buster
        actions/parent-action.yaml:
          name: parent-action
          runs:
            steps:
              - run: |-
                  echo "Welcome in action parent-action"
              - uses: actions/{{.cds_project}}/my_vcs_server/{{.git.user}}/{{.git_repo}}/child-action@master
                with:
                  projectName: ${{ cds.project_key }}
                  name: 'Foo'
        actions/child-action.yaml:
          name: child-action
          inputs:
            projectName:
              description: project name
            name:
              description: name of the person to greet
              default: Steven
            lastname:
              description: lastname of the person to greet
              default: Doe
          runs:
            steps:
              - run: echo "Hello ${{ inputs.name }} ${{ inputs.lastname }} from project ${{ inputs.projectName }}"
        workflows/sub-action.yaml:
          name: {{.cds_workflow}}
          on: [push]
          jobs:
            init:
              runs-on: .cds/worker-models/debian.yml
              steps:
                - uses: .cds/actions/parent-action.yaml
                  id: action

    - name: Check CDS project analyses status
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis list {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 2
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Skipped"
        - result.systemoutjson.systemoutjson1.status ShouldEqual "Success"
      retry: 20
      delay: 5

    - name: Check that the CDS workflow has at least one execution and is Success
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow history {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} {{.cds_workflow}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 1
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Success"
      retry: 20
      delay: 5
      vars:
        workflowRunID:
          from: result.systemoutjson.systemoutjson0.id

    - name: Get Workflow run info
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow info {{.cds_project}} {{.workflowRunID}}"
        
    - name: Download logs
      script: {{.cdsctl}} -f {{.cdsctl.config}} experimental workflow logs download {{.cds_project}} {{.workflowRunID}}
    - name: Display log
      script: cat {{.cds_workflow}}-1-1-init-action
    - name: Check log content
      script: "cat {{.cds_workflow}}-1-1-init-action | grep \"Welcome in action parent-action\""
    - name: Check log in sub action
      script: "cat {{.cds_workflow}}-1-1-init-action | grep \"Hello Foo Doe from project {{.cds_project}}\""
