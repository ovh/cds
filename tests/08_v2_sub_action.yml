name: Sub Actions
vars:
  cds_project: "ITV2SUBACTION"
  git_repo: "it_v2_subaction"
  cds_workflow: "WorkflowSubAction"
testcases:
- name: Prepare test
  steps:
    - name: "Verify cdsctl configuration"
      script: "{{.cdsctl}} -f {{.cdsctl.config}} user me --format json"
      vars:
        cdsUser:
          from: result.systemoutjson.username
    - name: "Display username"
      info: "Connected CDS user is {{.cdsUser}}"
    - type: v2_install_gpg_key
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      gpg_key_id: "{{.gpg.key_id}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      vars:
        emailaddress:
          from: result.emailaddress
    - type: v2_create_project
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      cds_region: "{{.cds.region}}"
      git_emailAddress: "{{.emailaddress}}"

    - type: v2_add_git_repo
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      cds_hook_url: "{{.gitea.hook.url}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      git_repo: "{{.git_repo}}"

- name: Push workflow file
  steps:
    - type: v2_push_cds_files_on_repo
      git_repo: "{{.git_repo}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_email: "{{.Prepare-test.emailaddress}}"
      git_password: "{{.git.password}}"
      gpg_key_id: "{{.gpg.key_id}}"
      files:
        worker-models/debian.yml:
          name: docker-debian
          osarch: linux/amd64
          type: docker
          spec:
            image: buildpack-deps:buster
        actions/parent-action.yaml:
          name: parent-action
          runs:
            steps:
              - id: firststep
                run: |-
                  echo "Welcome in action parent-action on workflow ${{ cds.workflow }}"
                  worker export tag foo
                  worker export image bar
              - id: callchild
                uses: actions/{{.cds_project}}/my_vcs_server/{{.git.user}}/{{.git_repo}}/child-action@master
                with:
                  projectName: ${{ cds.project_key }}
                  name: 'Foo'
                env:
                  CHILD: BAR  
              - run: echo "Tag=${{ steps.firststep.outputs.tag }}"
              - run: echo "ChildInParent=${{steps.callchild.outputs.exportedChild}}"
              - id: testpath
                run: echo $PATH
            post: echo "Post from parent-action"
          outputs:
            parentOutFromChild:
              value: ${{ steps.callchild.outputs.exportedChild}}   
            image:
              value: ${{ steps.firststep.outputs.image}}   
            childPath1:
              type: path
              value: ${{ steps.callchild.outputs.childPath1}}
                  
        actions/child-action.yaml:
          name: child-action
          inputs:
            projectName:
              description: project name
            name:
              description: name of the person to greet
              default: Steven
            lastname:
              description: lastname of the person to greet
              default: Doe
          runs:
            steps:
              - run: echo "Hello ${{ inputs.name }} ${{ inputs.lastname }} from project ${{ inputs.projectName }}. Env ${PARENT}-${CHILD}"
              - id: step2
                run: worker export childvar1 childvalue1
              - id: step3
                run: worker export childvar2 childvalue2
              - run: echo "ChildVar=${{ steps.step2.outputs.childvar1}}"
              - id: path1
                run: worker export childPath1 /child/path/1
              - id: path2
                run: worker export childPath2 /child/path/2
            post: echo "Post from child-action"  
          outputs:
            exportedChild:
              value: ${{ steps.step3.outputs.childvar2 }}  
            childPath1:
              value: ${{ steps.path1.outputs.childPath1 }}  
              type: path
            childPath2:
              value: ${{ steps.path2.outputs.childPath2 }}  
              type: path  
        actions/echoPath.yaml:
          name: path-action
          runs:
            steps:
              - id: echo
                run: echo "${PATH}"     
        workflows/sub-action.yaml:
          name: {{.cds_workflow}}
          on: [push]
          jobs:
            init:
              runs-on: .cds/worker-models/debian.yml
              steps:
                - uses: .cds/actions/parent-action.yaml
                  id: action
                  env:
                    PARENT: FOO
                - id: echoPath
                  uses: .cds/actions/echoPath.yaml
                - id: exportFile
                  run: |
                    echo "Hello" > myfile.log
                    echo "World" >> myfile.log
                    cat myfile.log | worker export myfile   
                - id: jobPath
                  run: echo $PATH     
              outputs:
                fromParent:
                  value: ${{ steps.action.outputs.parentOutFromChild }}
                fromFile:
                  value: ${{ steps.exportFile.outputs.myfile }}  
            second:
              needs: [init]
              runs-on: .cds/worker-models/debian.yml
              steps:
               - run: echo "${{ jobs.init.outputs.fromFile }}"
                 id: echo

    - name: Check CDS project analyses status
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis list {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 2
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Skipped"
        - result.systemoutjson.systemoutjson1.status ShouldEqual "Success"
      retry: 100
      delay: 1

    - name: Check that the CDS workflow has at least one execution and is Success
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow history {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo}} {{.cds_workflow}} --format json"
      assertions:
        - and:
          - result.systemoutjson ShouldHaveLength 1
          - or: 
            - result.systemoutjson.systemoutjson0.status ShouldEqual "Success"
            - result.systemoutjson.systemoutjson0.status ShouldEqual "Fail"
      retry: 100
      delay: 1
      vars:
        workflowRunID:
          from: result.systemoutjson.systemoutjson0.id
        workflowRunStatus:
          from: result.systemoutjson.systemoutjson0.status  

    - name: Get Workflow run info
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow info {{.cds_project}} {{.workflowRunID}}"

    - name: Get job info
      script:  "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow jobs status {{.cds_project}} {{.workflowRunID}}"      
        
    - name: Download and check logs
      script: |-
        #!/bin/bash
        set -e
        FILE=/tmp/`uuidgen`
        mkdir -p $FILE && cd $FILE
        {{.cdsctl}} -f {{.cdsctl.config}} experimental workflow logs download {{.cds_project}} {{.workflowRunID}}
        ls -l
        cat {{.cds_workflow}}-1-1-init-action
        cat {{.cds_workflow}}-1-1-init-Post-action
        # Check log content
        cat {{.cds_workflow}}-1-1-init-action | grep "Welcome in action parent-action on workflow {{.cds_workflow}}"
        # Check log in sub action
        cat {{.cds_workflow}}-1-1-init-action | grep "Hello Foo Doe from project {{.cds_project}}"
        # Check env log in sub action
        cat {{.cds_workflow}}-1-1-init-action | grep "Env FOO-BAR"
        # Check Child var1
        cat {{.cds_workflow}}-1-1-init-action | grep "ChildVar=childvalue1"
        # Check Parent tag
        cat {{.cds_workflow}}-1-1-init-action | grep "Tag=foo"
        # Check Parent tag
        cat {{.cds_workflow}}-1-1-init-action | grep "ChildInParent=childvalue2"
        # Check Post Child action
        cat {{.cds_workflow}}-1-1-init-action | grep "Post from child-action"
        # Check childpath1 in parent action
        cat {{.cds_workflow}}-1-1-init-action | grep "/child/path/1"
        # Check childpath2 in parent action
        cat {{.cds_workflow}}-1-1-init-action | grep "/child/path/2"
        # Check path in second step action
        cat {{.cds_workflow}}-1-1-init-echoPath | grep "/child/path/1"
        # Check Post parent action
        cat {{.cds_workflow}}-1-1-init-Post-action | grep "Post from parent-action"
        # Check childPath1 in job step log
        cat {{.cds_workflow}}-1-1-init-jobPath | grep "/child/path/1"
        # Check that childPath2 does not exist
        if grep -q "/child/path/2" {{.cds_workflow}}-1-1-init-jobPath; then
          echo "child path2 has been expoerted"
          exit 1
        fi
        # Check export from second job
        cat {{.cds_workflow}}-1-1-second-echo
        cat {{.cds_workflow}}-1-1-second-echo | grep "Hello"
        cat {{.cds_workflow}}-1-1-second-echo | grep "World"
      retry: 60
      delay: 1

    - name: Check that we have 1 run result of type variable
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow result list {{.cds_project}} {{.workflowRunID}} --filter type=variable --format json"  
      assertions:
      - result.systemoutjson ShouldHaveLength 2
    
    - name: Echo Status
      script: echo {{.workflowRunStatus}}
      assertions:
      - result.systemout ShouldEqual Success