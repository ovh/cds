name: Password Check TestSuite
testcases:
- name: prepare test
  steps:
  - script: {{.cds}} project remove --force ITPWDCHECK
  - script: {{.cds}} project add ITPWDCHECK ITPWDCHECK ITPWDCHECK

- name: Checking project variable leak
  steps:
  - script: {{.cds}} project variable add ITPWDCHECK foo P4SSproj password
  - script: {{.cds}} project variable show ITPWDCHECK
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking env variable leak
  steps:
  - script: {{.cds}} env add ITPWDCHECK envfoo
  - script: {{.cds}} env variable add ITPWDCHECK envfoo foo P4SSenv password
  - script: {{.cds}} env variable show ITPWDCHECK envfoo
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking app variable leak
  steps:
  - script: {{.cds}} app add ITPWDCHECK TestApp
  - script: {{.cds}} app variable add ITPWDCHECK TestApp foo P4SSapp password
  - script: {{.cds}} app variable show ITPWDCHECK TestApp
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking pipeline parameter password leak
  steps:
  - script: {{.cds}} pipeline add ITPWDCHECK deploy --type=deployment
  - script: {{.cds}} pipeline parameter add ITPWDCHECK deploy foo "{{.cds.app.foo}}" string "hidden password"
  - script: {{.cds}} pipeline parameter show ITPWDCHECK deploy
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldNotContainSubstring P4SS

- name: Checking password variable still available to worker
  steps:
  - script: {{.cds}} pipeline job add ITPWDCHECK deploy myJob1
  - script: {{.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passenv={{.cds.env.yolo}}'"
  - script: {{.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passproj={{.cds.proj.foo}}'"
  - script: {{.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passapp={{.cds.app.foo}}'"
  - script: {{.cds}} pipeline job append ITPWDCHECK deploy myJob1 Script -p script="echo 'passpip={{.cds.pip.foo}}'"
  - script: {{.cds}} env variable add ITPWDCHECK envfoo yolo P4SSyolo password
  - script: {{.cds}} app pipeline add ITPWDCHECK TestApp deploy -p "foo={{.cds.app.foo}}"

- name: Expecting P4SS variable here
  steps:
  - script: {{.cds}} pipeline run ITPWDCHECK TestApp deploy envfoo
    assertions:
      - result.code ShouldEqual 0
      - result.systemout ShouldContainSubstring passenv=**cds.env.yolo**
      - result.systemout ShouldContainSubstring passproj=**cds.proj.foo**
      - result.systemout ShouldContainSubstring passapp=**cds.app.foo**

- name: clean
  steps:
  - script: {{.cds}} group remove ITPWDCHECK
