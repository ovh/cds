name: Create a simple workflow (ITSCWRKFLW1) and pull it
version: "2"
testcases:
- name: assert filepath, your current directory must be at the root of this project
  steps:
  - script: '[ -f ./fixtures/ITSCWRKFLW1/pipeline.yml ]'
  - script: '[ -f ./fixtures/ITSCWRKFLW1/workflow.yml ]'

- name: prepare test
  steps:
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} project remove --force ITSCWRKFLW1"
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} group remove --force ITSCWRKFLW1 "
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} project add ITSCWRKFLW1 ITSCWRKFLW1"
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} application add ITSCWRKFLW1 ITSCWRKFLW1-APPLICATION"
  - script: "{{.cdsctl}} -f {{.cdsctl.config}} worker model import --force ./fixtures/models/buildpack-deps.yml"

- name: import pipeline
  steps:
  - script: {{.cdsctl}} -f {{.cdsctl.config}} pipeline import --force ITSCWRKFLW1 ./fixtures/ITSCWRKFLW1/pipeline.yml

- name: import workflow
  steps:
  - script:  {{.cdsctl}} -f {{.cdsctl.config}} workflow import --force ITSCWRKFLW1 ./fixtures/ITSCWRKFLW1/workflow.yml

- name: pull workflow
  steps:
  - script:  {{.cdsctl}} -f {{.cdsctl.config}} workflow pull --force ITSCWRKFLW1 ITSCWRKFLW1-WORKFLOW --output-dir ./fixtures/ITSCWRKFLW1/output
  - script: '[ -f ./fixtures/ITSCWRKFLW1/output/ITSCWRKFLW1-PIPELINE.pip.yml ]'
  - script: '[ -f ./fixtures/ITSCWRKFLW1/output/ITSCWRKFLW1-APPLICATION.app.yml ]'
  - script: '[ -f ./fixtures/ITSCWRKFLW1/output/ITSCWRKFLW1-WORKFLOW.yml ]'