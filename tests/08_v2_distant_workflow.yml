name: Distant workflow
vars:
  cds_project: "ITV2DISTANTWORKFLOW"
  git_repo_src: "it_v2_distant_workflow_src"
  git_repo_code: "it_v2_distant_workflow_code"
  cds_workflow: "WorkflowDistant"
  worker_model: "{{.cds_project}}/my_vcs_server/{{.git.user}}/{{.git_repo_code}}/docker-debian"

testcases:
- name: Prepare test
  steps:
    - name: "Verify cdsctl configuration"
      script: "{{.cdsctl}} -f {{.cdsctl.config}} user me --format json"
      vars:
        cdsUser:
          from: result.systemoutjson.username
    - name: "Display username"
      info: "Connected CDS user is {{.cdsUser}}"
    - type: v2_create_project
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      cds_region: "{{.cds.region}}"

    - type: v2_add_git_repo
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      cds_hook_url: "{{.gitea.hook.url}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      git_repo: "{{.git_repo_src}}"

    - type: v2_add_git_repo
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      cds_project: "{{.cds_project}}"
      cds_hook_url: "{{.gitea.hook.url}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      git_repo: "{{.git_repo_code}}"  

    - type: v2_install_gpg_key
      cdsctl_command: "{{.cdsctl}} -f {{.cdsctl.config}}"
      gpg_key_id: "{{.gpg.key_id}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_password: "{{.git.password}}"
      vars:
        emailaddress:
          from: result.emailaddress

- name: PushMyfile
  steps:
    - type: v2_push_files_on_repo
      git_repo: "{{.git_repo_src}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_email: "{{.Prepare-test.emailaddress}}"
      git_password: "{{.git.password}}"
      gpg_key_id: "{{.gpg.key_id}}"
      files:
        myfile.md:
          coucou
    - name: Save src commit
      script: cd /tmp/repos/{{.git_repo_src}} && git rev-parse HEAD
      vars:
        commitSrc:
          from: result.systemout      

- name: PushCode
  steps:
    - type: v2_push_files_on_repo
      git_repo: "{{.git_repo_code}}"
      git_host: "{{.git.host}}"
      git_user: "{{.git.user}}"
      git_email: "{{.Prepare-test.emailaddress}}"
      git_password: "{{.git.password}}"
      gpg_key_id: "{{.gpg.key_id}}"
      files:
        worker-models/debian.yml:
          name: docker-debian
          osarch: linux/amd64
          type: docker
          spec:
            image: buildpack-deps:buster
        workflows/distant.yaml:
          name: {{.cds_workflow}}
          on: [workflow-update]
          repository:
            name: "{{.git.user}}/{{.git_repo_src}}"
            vcs: my_vcs_server
          jobs:
            init:
              runs-on: 
                model: "{{.worker_model}}"
                memory: "2048"
              steps:
                - id: gitinfo
                  run: env

    - name: Save code commit
      script: cd /tmp/repos/{{.git_repo_code}} && git rev-parse HEAD
      vars:
        commitCode:
          from: result.systemout  

- name: WorkflowExecution
  steps:
    - name: Check CDS project analyses status
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis list {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo_code}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 2
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Skipped"
        - result.systemoutjson.systemoutjson1.status ShouldEqual "Success"
      retry: 20
      delay: 5

    - name: Check that the CDS workflow has at least one execution and is Success
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow history {{.cds_project}} my_vcs_server {{.git.user}}/{{.git_repo_code}} {{.cds_workflow}} --format json"
      assertions:
        - result.systemoutjson ShouldHaveLength 1
        - result.systemoutjson.systemoutjson0.status ShouldEqual "Success"
      retry: 30
      delay: 5
      vars:
        runIdentifier:
          from: result.systemoutjson.systemoutjson0.id

    - name: Download logs
      script: "{{.cdsctl}} -f {{.cdsctl.config}} experimental workflow logs download {{.cds_project}} {{.runIdentifier}}"
    - name: Check git_sha
      script: "cat {{.cds_workflow}}-1-1-init-gitinfo && cat {{.cds_workflow}}-1-1-init-gitinfo | grep \"GIT_SHA={{.PushMyfile.commitSrc}}\""
    - name: Check workflow_sha
      script: "cat {{.cds_workflow}}-1-1-init-gitinfo && cat {{.cds_workflow}}-1-1-init-gitinfo | grep \"CDS_WORKFLOW_SHA={{.PushCode.commitCode}}\""  
