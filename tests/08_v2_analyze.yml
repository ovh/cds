name: Project Analyze testSuite
testcases:
- name: prepare test
  steps:
  - script: gpg --batch --yes --delete-secret-key 2B74B3591CEFB2F534265465E027B500E97E52E7 || true
  - script: gpg --batch --yes --delete-key 2B74B3591CEFB2F534265465E027B500E97E52E7 || true
  - script: curl -X DELETE "{{.git.host}}/api/v1/repos/{{.git.user}}/myrepo" -u "{{.git.user}}:{{.git.password}}"
  - script: {{.cdsctl}} -f {{.cdsctl.config}} project remove --force ITCLIPRJVCS
  - script: {{.cdsctl}} -f {{.cdsctl.config}} group remove ITCLIPRJVCS --force
  - script: {{.cdsctl}} -f {{.cdsctl.config}} group add ITCLIPRJVCS
  - script: {{.cdsctl}} -f {{.cdsctl.config}} project create ITCLIPRJVCS "Test Project" ITCLIPRJVCS
  - script: 'curl --fail -X POST "{{.git.host}}/api/v1/user/repos" -u "{{.git.user}}:{{.git.password}}" -d "{\"name\": \"myrepo\", \"auto_init\": true, \"default_branch\": \"master\"}" -H "Content-Type: application/json"'
  - script: gpg --import ./fixtures/gpg-ADMIN/key.priv
  - script: gpg --import ./fixtures/gpg-ADMIN/key.pub
  - script: 'curl -X POST {{.git.host}}/api/v1/user/gpg_keys -u "{{.git.user}}:{{.git.password}}" -H "Content-type: application/json" -d @./fixtures/gpg-ADMIN/key.pub.json'
  - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental rbac import ./fixtures/rbac/rbac_admin.yml --force

- name: commitStep
  steps:
    - script: rm -Rf /tmp/myrepo && git clone "http://{{.git.user}}:{{.git.password}}@localhost:3000/{{.git.user}}/myrepo.git" /tmp/myrepo
    - script: mkdir -p /tmp/myrepo/.cds/worker-models
    - script: cat ./fixtures/worker-model/docker-debian9.yml > /tmp/myrepo/.cds/worker-models/docker-debian9.yml
    - script: mkdir -p /tmp/myrepo/.cds/actions
    - script: cat ./fixtures/ITCLIPRJVCS/my-parent-action.yml > /tmp/myrepo/.cds/actions/my-parent-action.yml
    - script: cat ./fixtures/ITCLIPRJVCS/my-child-action.yml > /tmp/myrepo/.cds/actions/my-child-action.yml
    - script: mkdir -p /tmp/myrepo/.cds/workflows
    - script: cat ./fixtures/ITCLIPRJVCS/my-workflow.yml > /tmp/myrepo/.cds/workflows/my-workflow.yml
    - script: cd /tmp/myrepo && git config user.email "{{.git.user}}@gitea.eu" && git config user.name "{{.git.user}}"
    - script: cd /tmp/myrepo && git add /tmp/myrepo/.cds/* && git commit . --gpg-sign=2B74B3591CEFB2F534265465E027B500E97E52E7 -m "add file and sign" && git push

- name: import / export vcs server
  steps:
  - script: export PROJECT_KEY=ITCLIPRJVCS && envsubst < ./fixtures/ITCLIPRJVCS/my_vcs_project.yml > ./fixtures/ITCLIPRJVCS/my_vcs_project_replaced.yml
  - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project vcs import ITCLIPRJVCS ./fixtures/ITCLIPRJVCS/my_vcs_project_replaced.yml
  - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project vcs list ITCLIPRJVCS --format json
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.systemoutjson0.name ShouldEqual "my_vcs_server"
  - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project vcs export ITCLIPRJVCS my_vcs_server > my_vcs_project_exported.yml
  - script: grep 'my_vcs_server' my_vcs_project_exported.yml

- name: repositoryProject
  steps:
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project repository add ITCLIPRJVCS my_vcs_server {{.git.user}}/myrepo
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project repository list ITCLIPRJVCS --vcs-name my_vcs_server --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson.systemoutjson0.reponame ShouldEqual "{{.git.user}}/myrepo"

- name: analysis
  steps:
    - script: sleep 5
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis list ITCLIPRJVCS my_vcs_server {{.git.user}}/myrepo --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson.__len__ ShouldBeGreaterThan 0
      retry: 3
      delay: 5
      vars:
        analyzeID:
          from: result.systemoutjson.systemoutjson0.id
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project analysis show ITCLIPRJVCS my_vcs_server {{.git.user}}/myrepo {{.analyzeID}}
      retry: 10
      delay: 2
      assertions:
        - result.code ShouldEqual 0
        - 'result.systemout ShouldContainSubstring "status: Success"'
        - 'result.systemout ShouldContainSubstring "key_sign_id: E027B500E97E52E7"'
        - 'result.systemout ShouldContainSubstring "my-parent-action.yml"'
        - 'result.systemout ShouldContainSubstring "my-child-action.yml"'
        - 'result.systemout ShouldContainSubstring "my-workflow.yml"'
        - 'result.systemout ShouldContainSubstring "docker-debian9.yml"'
        - 'result.systemout ShouldNotContainSubstring "error:"'
- name: Push workflow and run it
  steps:
    - script: {{.cdsctl}} -f {{.cdsctl.config}} workflow push ITCLIPRJVCS ./fixtures/ITCLIPRJVCS/workflow.yml ./fixtures/ITCLIPRJVCS/pipeline.pip.yml ./fixtures/ITCLIPRJVCS/application.app.yml --skip-update-files
    - script: {{.cdsctl}} -f {{.cdsctl.config}} workflow run ITCLIPRJVCS ITCLIPRJVCSWRKFLW1-WORKFLOW  -d '{"name":"John"}'
      assertions:
        - result.code ShouldEqual 0
        - "result.systemout ShouldContainSubstring Workflow ITCLIPRJVCSWRKFLW1-WORKFLOW #1 has been launched"
    - script: {{.cdsctl}} -f {{.cdsctl.config}} workflow status ITCLIPRJVCS ITCLIPRJVCSWRKFLW1-WORKFLOW 1 --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson.status ShouldEqual Success
      retry: 30
      delay: 10
    - script: {{.cdsctl}} -f {{.cdsctl.config}} workflow logs download ITCLIPRJVCS ITCLIPRJVCSWRKFLW1-WORKFLOW 1 --pattern AsCode
    - script: cat ITCLIPRJVCSWRKFLW1-WORKFLOW*.log
    - script: grep 'Hello John Doe from project ITCLIPRJVCS' ITCLIPRJVCSWRKFLW1-WORKFLOW*.log

- name: delete rbac on project
  steps:
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental rbac delete perm-test --force
      assertions:
        - result.code ShouldEqual 0
- name: delete repository on project
  steps:
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project repository delete ITCLIPRJVCS my_vcs_server {{.git.user}}/myrepo --force
    - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project repository list ITCLIPRJVCS --vcs-name my_vcs_server --format json
      assertions:
        - result.code ShouldEqual 0
        - result.systemoutjson.systemoutjson0.name ShouldNotEqual "{{.git.user}}/myrepo"

- name: delete vcs project
  steps:
  - script: rm my_vcs_project_exported.yml
  - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project vcs delete ITCLIPRJVCS my_vcs_server --force
  - script: {{.cdsctl}} -f {{.cdsctl.config}} experimental project vcs list ITCLIPRJVCS --format json
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.systemoutjson0.name ShouldNotEqual "my_vcs_server"
