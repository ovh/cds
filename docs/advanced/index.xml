<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advanceds on CDS Documentation</title>
    <link>https://ovh.github.com/cds/advanced/</link>
    <description>Recent content in Advanceds on CDS Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ovh.github.com/cds/advanced/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Github</title>
      <link>https://ovh.github.com/cds/advanced/repositories_manager/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/repositories_manager/github/</guid>
      <description>Authorize CDS on Github Create a CDS application on Github Go to https://github.com/settings/developers and Register a new application: set an application name, the url and a description. Dont set up Authorization callback URL.
On the next page Github give you a Client ID and a Client Secret
Connect CDS To Github With CDS CLI run :
 $ cds admin reposmanager add GITHUB github http://github.com client-id=&amp;lt;your_client_id&amp;gt; client-secret=&amp;lt;client-secret&amp;gt;  If you use Vault as Secret Manager: Set in Vault you CDS Client Secret in a secret named : cds/repositoriesmanager-secrets-github.</description>
    </item>
    
    <item>
      <title>Hatcheries</title>
      <link>https://ovh.github.com/cds/advanced/hatcheries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/hatcheries/</guid>
      <description>Hatchery is a binary dedicated to spawn and kill worker in accordance with build queue needs.
An hatchery is started with permissions to build all pipelines accessible from a given group, using token generated by user.
There are 5 modes for hatcheries:
 Local (Start workers on a single host) Local Docker (Start worker model instances on a single host) Marathon (Start worker model instances on a mesos cluster with marathon framework) Swarm (Start worker on a docker swarm cluster) Openstack (Start hosts on an openstack cluster)  Local mode Hatchery starts workers directly as local process.</description>
    </item>
    
    <item>
      <title>Bitbucket</title>
      <link>https://ovh.github.com/cds/advanced/repositories_manager/bitbucket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/repositories_manager/bitbucket/</guid>
      <description>Authorize CDS on your Bitbucket instance You need to perform the following steps :
 Bitbucket admin privileges A RSA Key Pair  Create a CDS application in BitBucket In Bitbucket go to Administration Settings / Application Links. Create a new Application with :
 Name : CDS Type : Generic Application Application URL : Your CDS URL Display URL : Your CDS URL  On this application, you just have to set up OAuth Incoming Authentication :</description>
    </item>
    
    <item>
      <title>Hatchery Openstack</title>
      <link>https://ovh.github.com/cds/advanced/hatcheries/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/hatcheries/openstack/</guid>
      <description>CDS build using OVH.com Openstack infrastructure
Start Opentack hatchery Generate a token for group:
$ cds generate token -g shared.infra -e persistent fc300aad48242d19e782a37d361dfa3e55868a629e52d7f6825c7ce65a72bf92  Then start hatchery:
OPENSTACK_USER=&amp;lt;user&amp;gt; OPENSTACK_TENANT=&amp;lt;tenant&amp;gt; OPENSTACK_AUTH_ENDPOINT=https://auth.cloud.ovh.net OPENSTACK_PASSWORD=&amp;lt;password&amp;gt; OPENSTACK_REGION=SBG1 hatchery openstack \ --api=https://api.domain \ --max-worker=10 \ --provision=1 \ --token=fc300aad48242d19e782a37d361dfa3e55868a629e52d7f6825c7ce65a72bf92  This hatchery will now start worker of model &amp;lsquo;docker&amp;rsquo; on OVH.com Openstack infrastructure when a pipeline is in queue with requirement docker.
Setup a worker model See Tutorial</description>
    </item>
    
    <item>
      <title>Repositories Manager</title>
      <link>https://ovh.github.com/cds/advanced/repositories_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/repositories_manager/</guid>
      <description>CDS can be linked to following repositories manager :
 Atlassian Stash Github  It allows you to enable some CDS features such as :
 Create application in CDS from Stash or Github Attach an application to its Stash or Github repository Fully automatic hook management Branch filtering on application workflows Commit logs on pipeline build details  Go through this tutorial to enable the link between repositories managers and CDS.</description>
    </item>
    
    <item>
      <title>Worker Model</title>
      <link>https://ovh.github.com/cds/advanced/worker/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/worker/model/</guid>
      <description>Purpose The goal of CDS is to start a worker when you need it and matching all your requirements exactly. In order to scale automatically on demand, it is possible to register a worker model.
The goal of worker model is to describe the capabities of a given docker/iso image in terms of architecture, pre-installed binaries or libraries.
Types There is 2 types of worker models:
 Docker images, see how to create a worker model docker Openstack images, see how to create a worker model openstack  Capabilities Capabilities have a name, a type and a value.</description>
    </item>
    
    <item>
      <title>Token</title>
      <link>https://ovh.github.com/cds/advanced/worker/token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/worker/token/</guid>
      <description> Generate a Token Purpose In order to start a worker, you need to provide a worker key to be able to build your pipelines.
CLI Run the following command, replace yourgroup with your group
$ cds generate token -g yourgroup -e persistent  </description>
    </item>
    
    <item>
      <title>Write a Plugin</title>
      <link>https://ovh.github.com/cds/advanced/write-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/write-plugin/</guid>
      <description>A CDS worker executes job, and job is composed of steps.
A step is :
 a builtin action, as GitClone, etc&amp;hellip; read more a user action read more a Plugin Action  A Plugin is a Golang Binary.
Take a look at https://github.com/ovh/cds/tree/master/sdk/plugin/dummy/dummy_plugin.go
Contribute on https://github.com/ovh/cds/tree/master/contrib/plugins</description>
    </item>
    
    <item>
      <title>Worker</title>
      <link>https://ovh.github.com/cds/advanced/worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.com/cds/advanced/worker/</guid>
      <description>A pipeline is structured in sequential stages containing one or multiple concurrent jobs. A Job will be executed by a worker.
Building your own worker model enable you to integrate your own tools, or to customize the tools you need to use. For instance, to build an AngularJs application, you shall need a worker capable of installing npm tools, importing bower packages (these are nodeJs tools), building webfonts with fontforge, &amp;hellip;</description>
    </item>
    
  </channel>
</rss>